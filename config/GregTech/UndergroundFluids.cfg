# Configuration file

undergroundfluid {
    # Dimension IDs Black List
    I:DimBlackList <
        -1
        1
     >

    overworld {
        # Dimension ID or Class Name
        S:Dimension=0

        naturalgas {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=20

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=350

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=10

            # Fluid registry name
            S:Registry=gas_natural_gas
        }

        lightoil {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=20

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=350

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=10

            # Fluid registry name
            S:Registry=liquid_light_oil
        }

        mediumoil {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=20

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=625

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=liquid_medium_oil
        }

        heavyoil {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=20

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=625

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=liquid_heavy_oil
        }

        oil {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=20

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=625

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=oil
        }

    }

    moon {
        # Dimension ID or Class Name
        S:Dimension=Moon

        helium3 {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=425

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=helium-3
        }

        saltwater {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=20

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=200

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=saltwater
        }

    }

    mercury {
        # Dimension ID or Class Name
        S:Dimension=Mercury

        helium3 {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=800

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=helium-3
        }

        molteniron {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=30

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=400

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=molten.iron
        }

    }

    venus {
        # Dimension ID or Class Name
        S:Dimension=Venus

        moltenlead {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=1600

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=molten.lead
        }

        sulfuricacid {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=250

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=sulfuricacid
        }

        carbondioxide {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=1500

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=carbondioxide
        }

    }

    mars {
        # Dimension ID or Class Name
        S:Dimension=Mars

        saltwater {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=400

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=saltwater
        }

        chlorobenzene {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=400

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=chlorobenzene
        }

    }

    io {
        # Dimension ID or Class Name
        S:Dimension=Io

        moltenlead {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=20

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=650

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=molten.lead
        }

        sulfuricacid {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=80

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=350

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=sulfuricacid
        }

        carbondioxide {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=80

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=750

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=carbondioxide
        }

    }

    europa {
        # Dimension ID or Class Name
        S:Dimension=Europa

        saltwater {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=800

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=saltwater
        }

        veryheavyoil {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=20

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=200

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=liquid_extra_heavy_oil
        }

        distilledwater {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=80

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=3500

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=ic2distilledwater
        }

    }

    callisto {
        # Dimension ID or Class Name
        S:Dimension=Callisto

        oxygen {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=200

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=oxygen
        }

        liquidair {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=200

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=liquidair
        }

    }

    titan {
        # Dimension ID or Class Name
        S:Dimension=Titan

        methane {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=800

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=methane
        }

        ethane {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=200

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=ethane
        }

    }

    miranda {
        # Dimension ID or Class Name
        S:Dimension=Miranda

        hydrogensulfide {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=900

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=liquid_hydricsulfur
        }

    }

    oberon {
        # Dimension ID or Class Name
        S:Dimension=oberon

        carbonmonoxide {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=2000

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=carbonmonoxide
        }

    }

    triton {
        # Dimension ID or Class Name
        S:Dimension=Triton

        nitrogen {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=800

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=nitrogen
        }

        ethylene {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=800

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=ethylene
        }

    }

    proteus {
        # Dimension ID or Class Name
        S:Dimension=Proteus

        deuterium {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=700

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=deuterium
        }

    }

    pluto {
        # Dimension ID or Class Name
        S:Dimension=Pluto

        nitrogen {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=800

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=nitrogen
        }

        oxygen {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=800

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=oxygen
        }

        liquidair {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=40

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=300

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=4

            # Fluid registry name
            S:Registry=liquidair
        }

        fluorine {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=80

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=800

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=4

            # Fluid registry name
            S:Registry=fluorine
        }

    }

    makemake {
        # Dimension ID or Class Name
        S:Dimension=Makemake

        hydrofluoricacid {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=80

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=300

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=hydrofluoricacid_gt5u
        }

    }

    alphacentauribb {
        # Dimension ID or Class Name
        S:Dimension=aCentauriBb

        moltencopper {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=10

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=300

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=molten.copper
        }

    }

    barnardac {
        # Dimension ID or Class Name
        S:Dimension=BarnardaC

        veryheavyoil {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=800

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=liquid_extra_heavy_oil
        }

        unknownwater {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=300

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=unknowwater
        }

    }

    barnardae {
        # Dimension ID or Class Name
        S:Dimension=BarnardaE

        liquidair {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=20

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=400

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=liquidair
        }

    }

    barnardaf {
        # Dimension ID or Class Name
        S:Dimension=BarnardaF

        moltentin {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=15

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=400

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=molten.tin
        }

    }

    tcetie {
        # Dimension ID or Class Name
        S:Dimension=TCetiE

        veryheavyoil {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=200

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=liquid_extra_heavy_oil
        }

        hydrogen {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=50

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=700

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=hydrogen
        }

        distilledwater {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=10000

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=ic2distilledwater
        }

    }

    ross128b {
        # Dimension ID or Class Name
        S:Dimension=Ross128b

        veryheavyoil {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=40

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=625

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=liquid_extra_heavy_oil
        }

        lava {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=5

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=820

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=lava
        }

        naturalgas {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=65

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=625

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=gas_natural_gas
        }

        distilledwater {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=100

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=5000

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=ic2distilledwater
        }

    }

    ross128ba {
        # Dimension ID or Class Name
        S:Dimension=Ross128ba

        saltwater {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=40

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=1250

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=saltwater
        }

        helium3 {
            # Chance generating (weighted chance!, there will be a fluid in chunk always!)
            I:Chance=60

            # Decrease per operation (actual fluid gained works like (Litre)VeinData/5000)
            I:DecreasePerOperationAmount=5

            # Max amount generation (per operation, sets the VeinData) 80000 MAX
            I:MaxAmount=1250

            # Min amount generation (per operation, sets the VeinData) 0 MIN
            I:MinAmount=0

            # Fluid registry name
            S:Registry=helium-3
        }

    }

}


